{
    "1": {
        "question": "Различие между статическими и динамическими веб-сайтами.",
        "answer": "* Статический веб-сайт *\n\n1. Содержимое не может быть изменено после выполнения скрипта\n2. Нет способа изменить содержимое, так как оно предопределено\n\n* Динамический веб-сайт *\n\n1. Содержимое может быть изменено даже во время выполнения\n2. Содержимое можно легко изменить путем манипуляций и перезагрузки"
    },
    "2": {
        "question": "Для чего PHP наиболее часто используется?",
        "answer": "У PHP есть множество применений для разработчиков, и ниже перечислены некоторые из наиболее широко используемых концепций, которые предлагает PHP:\n\n* С PHP становится очень легко предоставить ограниченный доступ к необходимому содержимому веб-сайта.\n* Позволяет пользователям получить доступ к индивидуальным файлам cookie и устанавливать их по мере необходимости.\n* Операции манипулирования базой данных, такие как добавление, удаление и модификация, могут быть легко выполнены.\n* Обработка форм, вместе с функциями, включающими концепции обработки файлов и интеграции электронной почты, широко используется.\n* Модуль системы позволяет пользователям выполнять различные системные функции, такие как открытие, чтение, запись и т. д."
    },
    "3": {
        "question": "Является ли PHP чувствительным к регистру языком сценариев?",
        "answer": "Ответ на этот вопрос как да, так и нет. Переменные и их объявление в PHP полностью чувствительны к регистру, в то время как имена функций нет.\n\nНапример, пользовательские функции в PHP могут быть определены заглавными буквами, но позже ссылаться на них строчными буквами, и они все равно будут работать нормально.\n\n Далее в этих вопросах по PHP для новичков вам нужно понять, что такое PEAR."
    },
    "4": {
        "question": "Каково значение PEAR в PHP?",
        "answer": "PEAR означает PHP Extension and Application Repository. Это один из фреймворков и хранилищ, содержащих все повторно используемые компоненты PHP. Помимо содержания некоторых библиотек PHP, он также предоставляет вам простой интерфейс на PHP для автоматической установки пакетов."
    },
    "5": {
        "question": "Как выполняется PHP-скрипт?",
        "answer": "PHP-скрипты могут быть легко выполнены из интерфейса командной строки (CLI). Синтаксис следующий:\n\nphp filename.php\n\nЗдесь filename - это имя файла, содержащего скрипты. Расширение .php необходимо наряду с именем файла."
    },
    "6": {
        "question": "Какие типы переменных присутствуют в PHP?",
        "answer": "В PHP существует восемь основных типов данных, как показано ниже:\n\n* Массив: именованная и упорядоченная коллекция данных\n* Булев тип: логическое значение (True или False)\n* Double: числа с плавающей запятой, такие как 5.1525\n* Целое число: целые числа без плавающей запятой\n* Объект: экземпляр классов, содержащий данные и функции\n* NULL: специальный тип данных, поддерживающий только NULL-данные\n* Ресурс: специальные переменные, которые содержат ссылки на внешние ресурсы\n* Строка: последовательность символов, такая как «Привет, учащиеся!»"
    },
    "7": {
        "question": "Какие правила именования переменных следует соблюдать в PHP?",
        "answer": "Существует два основных правила, которые вы должны соблюдать при именовании переменных в PHP. Они следующие:\n\n* Переменные могут начинаться только с букв или подчеркиваний.\n* Специальные символы, такие как +, %, -, &, и т. д., не могут быть использованы."
    },
    "8": {
        "question": "Каковы основные характеристики переменной PHP?",
        "answer": "Вот некоторые из наиболее важных аспектов использования переменных в PHP:\n\n* Переменные могут быть объявлены перед присваиванием значения.\n* Присваивание значения переменной происходит с помощью оператора «=».\n* Каждая переменная в PHP обозначается символом $ (доллар).\n* Значение переменной зависит от ее последнего присвоенного значения.\n* Переменные PHP не являются внутренними. Нет явного объявления.\n* Далее в этих вопросах PHP для новичков вам нужно понять, что такое NULL."
    },
    "9": {
        "question": "Что такое NULL в PHP?",
        "answer": "NULL - это специальный тип данных в PHP, используемый для обозначения наличия только одного значения, NULL. Вы не можете присвоить ему никакое другое значение.\n\nNULL в PHP не чувствителен к регистру и может быть объявлен двумя способами, как показано ниже:\n$var = NULL:\nИли,\n$var = null;"
    },
    "10": {
        "question": "Как определяются константы в PHP?",
        "answer": "Константы могут быть легко определены в PHP с помощью функции define(). Эта функция используется для определения и извлечения значений констант с легкостью.\n\nКак следует из названия, константы не могут быть изменены после определения. Они не требуют синтаксиса PHP, начинающегося с привычного знака $."
    },
    "11": {
        "question": "Каково использование функции constant() в PHP?",
        "answer": "Функция constant() используется для извлечения значений, предопределенных в константной переменной. Она используется особенно тогда, когда вы не знаете имя переменной."
    },
    "12": {
        "question": "Какие различные константы предопределены в PHP?",
        "answer": "PHP содержит много констант, и ниже приведены некоторые из наиболее широко используемых:\n\n* _METHOD_: Представляет имя класса\n* _CLASS_: Возвращает имя класса\n* _FUNCTION_: Обозначает имя функции\n* _LINE_: Обозначает рабочий номер строки\n* _FILE_: Представляет путь и имя файла"
    },
    "13": {
        "question": "В чем разница между переменными и константами в PHP?",
        "answer": "* Переменная *\n\n1. Переменные могут иметь измененные пути\n2. Область видимости по умолчанию - текущая область доступа\n3. Присваивание $ используется для определения\n4. Обязательное использование знака $ в начале\n\n* Константа *\n\n1. Константы не могут быть изменены\n2. Константы могут быть доступны повсюду без каких-либо правил области видимости\n3. Константы определяются с использованием функции define()\n4. Для констант не требуется знак $"
    },
    "14": {
        "question": "Что означает фраза 'PHP escape'?",
        "answer": "PHP escape - это механизм, который используется для указания парсеру PHP, что некоторые элементы кода отличаются от кода PHP. Это предоставляет базовые средства для разграничения фрагмента кода PHP от других аспектов программы."
    },
    "15": {
        "question": "Как сравниваются два объекта в PHP?",
        "answer": "PHP предоставляет вам оператор «==», который используется для сравнения двух объектов одновременно. Это используется для проверки наличия общих атрибутов и значений между объектами в сравнении.\n\nОператор «===» также используется для сравнения того, ссылаются ли оба объекта на один и тот же класс.\n\nДалее в этих вопросах PHP для интервью вам нужно понять фундаментальную концепцию."
    },
    "16": {
        "question": "Каково значение операторов break и continue в PHP?",
        "answer": "Break: Этот оператор используется в конструкции цикла для прекращения выполнения итерации и немедленного выполнения следующего фрагмента кода за пределами области действия оператора итерации.\n\nContinue: Этот оператор используется для пропуска текущей итерации цикла и продолжения выполнения следующей итерации до выхода из цикла."
    },
    "17": {
        "question": "Какие есть популярные фреймворки в PHP?",
        "answer": "В PHP существует множество фреймворков, известных своим использованием. Вот некоторые из них:\n\n* CodeIgniter\n* CakePHP\n* Laravel\n* Zend\n* Phalcon\n* Yii 2"
    },
    "18": {
        "question": "Каково использование ключевых слов final class и final method в PHP?",
        "answer": "Ключевое слово «final», если оно присутствует в объявлении, означает, что текущий метод не поддерживает переопределение другими классами. Это используется, когда необходимо создать неизменяемый класс.\n\nПримечание: Свойства не могут быть объявлены как final. Это касается только методов и классов.\n\nДалее в этом блоге о вопросах и ответах по PHP вы найдете промежуточные вопросы."
    },
    "19": {
        "question": "Как JavaScript взаимодействует с PHP?",
        "answer": "JavaScript является языком программирования на стороне клиента, а PHP - серверным сценарным языком. PHP имеет возможность создавать переменные JavaScript, и это можно легко выполнить в браузере, что позволяет передавать переменные в PHP с использованием простого URL."
    },
    "20": {
        "question": "Взаимодействует ли PHP с HTML?",
        "answer": "Да, взаимодействие HTML и PHP лежит в основе функциональности PHP. Сценарии PHP имеют возможность генерировать режим HTML и легко перемещаться вокруг информации.\nPHP - это серверный сценарный язык, а HTML - язык на стороне клиента. Это взаимодействие помогает сократить пробелы и использовать лучшее из обоих языков."
    },
    "21": {
        "question": "Какие типы массивов поддерживаются в PHP?",
        "answer": "В PHP используются три основных типа массивов.\n\n* Индексированные массивы: это массивы, содержащие числовые данные. Доступ к данным и их хранение линейны в индексированных массивах.\n* Ассоциативные массивы: это массивы, содержащие строки для индексации элементов.\n* Многомерные массивы: это массивы, содержащие более одного индекса и измерения."
    },
    "22": {
        "question": "Как работает цикл foreach в PHP?",
        "answer": "Оператор foreach - это конструкция цикла, используемая в PHP для итерации и перебора массивов. Работа оператора foreach проста; при каждом проходе значение присваивается элементам, а указатели инкрементируются. Этот процесс повторяется до конца массива."
    },
    "23": {
        "question": "В чем разница между функциями require() и require_once()?",
        "answer": "* require() *\n\n1. Включение и оценка файлов\n2. Предпочтительно для файлов с меньшим количеством функций\n\n* require_once() *\n\n1. Включает файлы, если они не были включены ранее\n2. Предпочтительно, когда есть много функций"
    },
    "24": {
        "question": "Можно ли установить бесконечное время выполнения в PHP?",
        "answer": "Да, это возможно сделать в PHP для скрипта, добавив функцию set_time_limit(0) в начало скрипта.\n\nЭто также можно выполнить в файле 'php.ini', если не в начале скрипта."
    },
    "25": {
        "question": "Каково назначение конструкторов и деструкторов в PHP?",
        "answer": "Конструкторы - это специальные методы в PHP, которые автоматически вызываются в момент создания объекта. Их основное назначение - инициализировать свойства объекта и выполнить любые необходимые задачи настройки. Конструкторы особенно полезны для обеспечения того, чтобы объект был в действительном и используемом состоянии при создании. Они позволяют разработчикам определить и установить начальные значения для свойств объекта или выполнить другую логику инициализации. Используя конструкторы, объект можно правильно настроить и готов к использованию немедленно.\n\nДеструкторы вызываются автоматически, когда объект выходит из области видимости. Их основная цель - выполнить операции очистки перед уничтожением объекта и последующим освобождением его памяти. Деструкторы ценны для освобождения ресурсов, закрытия соединений с базами данных и выполнения любых необходимых операций по очистке. С помощью реализации деструкторов разработчики могут обеспечить правильное управление и освобождение ресурсов, когда они больше не нужны, что эффективно предотвращает утечки памяти и другие потенциальные проблемы."
    },
    "26": {
        "question": "Какие есть популярные системы управления контентом (CMS), созданные с использованием PHP?",
        "answer": "Существует множество CMS, созданных с использованием PHP. Популярные из них перечислены ниже:\n\n* WordPress\n* Joomla\n* Magento\n* Drupal"
    },
    "27": {
        "question": "Какой самый распространенный метод хеширования паролей в PHP?",
        "answer": "Функция crypt() широко используется для этой функциональности, поскольку она предоставляет большое количество алгоритмов хеширования, которые можно использовать. Среди этих алгоритмов md5, sha1 или sha256."
    },
    "28": {
        "question": "В чем разница между индексированным массивом и ассоциативным массивом?",
        "answer": "Индексированные массивы содержат элементы с числовым индексом.\nПример: $color=array('red','green','blue');\n\nЗдесь red имеет индекс 0, green - 1, а blue - 2.\n\nАссоциативные массивы, напротив, содержат элементы с строковыми индексами, как показано ниже:\nПример: $salary=array('Jacob'=>'20000','John'=>'44000','Josh'=>'60000');"
    },
    "29": {
        "question": "Что такое сессии и куки в PHP?",
        "answer": "Сессии - это глобальные переменные, которые хранятся на сервере внутри архитектуры. Каждая сессия помечена уникальным идентификатором сервера, который затем используется для работы с хранением и извлечением значений.\n\nКуки - это сущности, используемые для идентификации уникальных пользователей в архитектуре. Это небольшой файл, который сервер размещает в системе клиента. Это делается для получения полезной информации от клиента для разработки различных аспектов сервера."
    },
    "30": {
        "question": "Поддерживается ли приведение типов в PHP?",
        "answer": "Да, приведение типов поддерживается в PHP и выполняется очень легко. Вот типы, которые могут быть приведены в PHP:\n\n* (int), (integer): Приведение к целому числу\n* (bool), (boolean): Приведение к логическому типу\n* (float), (double), (real): Приведение к числу с плавающей запятой\n* (string): Приведение к строке\n* (array): Приведение к массиву\n* (object): Приведение к объекту"
    },
    "31": {
        "question": "Может ли форма быть отправлена в PHP без использования кнопки отправки?",
        "answer": "Да, форма может быть отправлена без явного использования кнопки. Это делается с помощью функции JavaScript submit() легко.\n\nДалее на этих вопросах для разработчика PHP важно, чтобы вы подробно знали о PHP. Читайте далее."
    },
    "32": {
        "question": "Как использовать функции session_start() и session_destroy() в PHP?",
        "answer": "В PHP функция session_start() используется для запуска новой сессии. Однако она также может возобновить существующую сессию, если она остановлена. В этом случае возвратом будет текущая сессия, если она возобновлена."
    },
    "33": {
        "question": "Как можно открыть файл в PHP?",
        "answer": "PHP поддерживает файловые операции, предоставляя пользователям множество функций, связанных с файлами.\n\nВ случае открытия файла используется функция fopen(). Эта функция может открывать файл или URL по мере необходимости. Она принимает два аргумента: $filename и $mode."
    },
    "34": {
        "question": "Каковы различные типы ошибок в PHP?",
        "answer": "В PHP существует три основных типа ошибок. Они следующие:\n\n* Уведомление: Уведомление - это некритическая ошибка, которая не отображается пользователю.\n* Предупреждение: Предупреждение - это ошибка, которая отображается пользователю во время выполнения скрипта.\n* Фатальная ошибка: Это самый критический тип ошибки. Фатальная ошибка приведет к немедленному завершению скрипта."
    },
    "35": {
        "question": "Как можно получить IP-адрес клиента в PHP?",
        "answer": "IP-адрес клиента, который подключен, можно легко получить в PHP с помощью следующего синтаксиса:\n\n$_SERVER['REMOTE_ADDR'];"
    },
    "36": {
        "question": "В чем разница между $message и $$message в PHP?",
        "answer": "И $message, и $$message являются переменными в PHP, и разница заключается в имени. В то время как $message - это переменная с фиксированным именем, $$message - это переменная с именем, которое фактически хранится в $message."
    },
    "37": {
        "question": "В чем разница между методами GET и POST в PHP?",
        "answer": "* Метод GET *\n\n1. Метод GET может отправлять максимум 1024 символа одновременно.\n2. GET не поддерживает отправку двоичных данных.\n3. Для доступа к отправленным данным используется переменная среды QUERY_STRING.\n4. Ассоциативный массив $_GET используется для доступа к отправленной информации.\n\n* Метод POST *\n\n1. Нет ограничений на размер данных.\n2. POST поддерживает двоичные данные, а также ASCII.\n3. Данные передаются с использованием протокола HTTP и заголовка.\n4. Для доступа к отправленной информации используется ассоциативный массив $_POST."
    },
    "38": {
        "question": "Для чего используются лямбда-функции в PHP?",
        "answer": "Лямбда-функция, будучи анонимной функцией, используется для хранения данных сначала в переменной, а затем для их передачи в качестве аргументов для использования в других методах или функциях.\nРассмотрим следующий пример:\n\n$input = array(2, 5, 10);\n\n$output = array_filter($input, function ($x) { return $x > 2; });\n\nЗдесь определение лямбда-функции:\nfunction ($x) { return $x > 2; });\nОно используется далее для сохранения данных в переменной, и затем вы можете использовать его по мере необходимости без необходимости повторного определения."
    },
    "39": {
        "question": "В чем разница между исключениями на этапе компиляции и на этапе выполнения в PHP?",
        "answer": "Как следует из названия, если происходит любое исключение во время компиляции скрипта, оно называется исключением на этапе компиляции. FileNotFoundException - хороший пример исключения на этапе компиляции.\n\nИсключение, которое прерывает выполнение скрипта во время его выполнения, называется исключением на этапе выполнения. ArrayIndexOutOfBoundException - пример исключения на этапе выполнения."
    },
    "40": {
        "question": "Каково значение подсказки типа в PHP?",
        "answer": "Подсказка типа используется в PHP, когда требуется явно определить тип данных аргумента при его передаче через функцию.\n\nКогда эта функция вызывается в первый раз, PHP выполнит быструю проверку для анализа присутствия всех указанных типов данных. Если они отличаются, то выполнение остановится, так как будет вызвано исключение."
    },
    "41": {
        "question": "Как URL связан с PHP?",
        "answer": "Любой URL может быть легко связан с PHP с помощью библиотеки, называемой cURL. Она поставляется в комплекте со стандартной установкой PHP.\n\nТермин «cURL» означает клиентский URL, позволяя пользователям подключаться к URL и забирать информацию с этой страницы для отображения."
    },
    "42": {
        "question": "Какие шаги необходимо выполнить для создания новой базы данных с использованием MySQL и PHP?",
        "answer": "Существует четыре основных шага, которые используются для создания новой базы данных MySQL в PHP. Они следующие:\n\n* Сначала устанавливается соединение с сервером MySQL с помощью сценария PHP.\n* Затем проверяется соединение. Если соединение установлено успешно, вы можете написать образец запроса для проверки.\n* Вводятся запросы, создающие базу данных, и затем они сохраняются в строковой переменной.\n* Затем созданные запросы выполняются один за другим."
    },
    "43": {
        "question": "Как работает конкатенация строк в PHP?",
        "answer": "Конкатенация строк выполняется легко в PHP с использованием оператора точки (.) . Рассмотрим следующий пример:\n<?php $string1='Добро пожаловать'; $string2='в Intellipaat'; echo $string1 . ' ' . $string2; ?>"
    },
    "44": {
        "question": "Какие правила существуют для определения «истины» любого значения, которое еще не является логическим значением?",
        "answer": "Значение считается «истинным», если это либо непустая строка, либо ненулевое число. Все остальное, такое как значение null или пустая строка, считается ложью. Кроме того, массив является ложным, если он пуст и верным, если в нем есть хотя бы один элемент. Null также считается ложным."
    },
    "45": {
        "question": "Как мы можем зашифровать пароль с помощью PHP?",
        "answer": "Функция crypt () используется для создания одностороннего шифрования. Она принимает одну входную строку и один необязательный параметр. Функция определена как:\ncrypt ($input_string, $salt)\n\nЗдесь $input_string состоит из входной строки, которую необходимо зашифровать, а $salt также является строковым параметром, который используется для создания надежного пароля и действует в качестве основы процесса хеширования здесь. PHP использует DES для шифрования."
    },
    "46": {
        "question": "Объясните, как отправить форму без кнопки отправки.",
        "answer": "Форма может быть отправлена или размещена без кнопки следующими способами:\n* При событии OnClick метки в форме можно вызвать функцию JavaScript для отправки формы.\nПример:\n document.form_name.submit()\n* Использование гиперссылки: При нажатии на ссылку можно вызвать функцию JavaScript.\n* Форму можно отправить следующими способами также без использования кнопки отправки:\n** Отправка формы, щелкнув по ссылке\n** Отправка формы, выбрав вариант из раскрывающегося списка с вызовом события onChange\n** Использование JavaScript:\ndocument.form.submit();\n* Использование header(«location:page.php»);"
    },
    "47": {
        "question": "Как можно увеличить время выполнения скрипта PHP?",
        "answer": "* Время, разрешенное для выполнения скрипта PHP, по умолчанию составляет 30 секунд, как указано в файле php.ini. Используется функция set_time_limit(int sec). Если передается значение «0», это займет неограниченное время. Следует отметить, что если значение по умолчанию установлено на 30 секунд и в set_time_limit() указано 20 секунд, скрипт будет выполняться 45 секунд.\n* Это время можно увеличить, изменив max_execution_time в секундах. Время должно быть изменено с учетом окружения сервера. Это связано с тем, что изменение времени выполнения повлияет на все сайты, размещенные на сервере.\n* Время выполнения скрипта можно увеличить, используя:\n** Функцию sleep() в скрипте PHP\n** Функцию set_time_limit()\n\nПо умолчанию лимит составляет 30 секунд. Лимит времени можно установить в ноль, чтобы не устанавливать ограничение по времени."
    },
    "48": {
        "question": "Что такое Zend Engine?",
        "answer": "Zend Engine используется внутренне PHP как компилятор и среда выполнения. Сценарии PHP загружаются в память и компилируются в Zend OPCodes.\nЭти OPCodes выполняются, и сгенерированный HTML отправляется клиенту.\nZend Engine предоставляет управление памятью и ресурсами, а также другие стандартные сервисы для языка PHP. Его производительность, надежность и расширяемость сыграли значительную роль в увеличении популярности PHP."
    },
    "49": {
        "question": "Какая библиотека используется для работы с PDF в PHP?",
        "answer": "Функции PDF в PHP могут создавать PDF-файлы с использованием PDFlib версии 6. PDFlib предлагает объектно-ориентированный API для PHP5, помимо функционального API для PHP4.\nСуществует также модуль Panda.\nFPDF - это класс PHP, который позволяет генерировать PDF-файлы с помощью чистого PHP (без использования PDFlib). F в FPDF означает Free: мы можем использовать его для любых требований и модифицировать его по своему усмотрению. FPDF не требует расширений (за исключением zlib для активации сжатия и GD для поддержки GIF) и работает с PHP4 и PHP5."
    },
    "50": {
        "question": "Что такое htaccess? Зачем мы его используем и где?",
        "answer": "Файлы .htaccess - это конфигурационные файлы сервера Apache, которые предоставляют возможность вносить изменения в конфигурацию на основе директорий. Файл с одним или несколькими директивами конфигурации помещается в определенный документ, директория; директивы применяются к этой директории и всем ее поддиректориям.\nЭти файлы .htaccess используются для изменения функциональности и особенностей веб-сервера Apache.\nНапример:\n\n* Файл .htaccess используется для перезаписи URL-адресов.\n* Он используется для защиты сайта паролем.\n* Можно ограничить некоторые IP-адреса таким образом, что на этих ограниченных IP-адресах сайт не будет открываться."
    },
    "51": {
        "question": "Что означает PEAR в PHP?",
        "answer": "PEAR - это акроним для PHP Extension and Application Repository. Цель PEAR состоит в предоставлении:\n\n* Структурированной библиотеки открытого кода для пользователей PHP\n* Системы для распространения кода и обслуживания пакетов\n* Стандартного стиля написания кода на PHP\n* PHP Foundation Classes (PFC)\n* PHP Extension Community Library (PECL)\n* Веб-сайта, списков рассылки и зеркал загрузки для поддержки сообщества PHP/PEAR"
    },
    "52": {
        "question": "Что такое soundex() и metaphone()?",
        "answer": "Функция soundex() вычисляет звуковой код строки. Звуковой код - это 4-символьная алфавитно-цифровая строка, представляющая английское произношение слова. Функция soundex() часто используется для приложений проверки правописания.\n\nФункция metaphone() вычисляет метафонический код строки, который представляет, как строка звучит, если ее произносит англоговорящий человек. Эта функция также полезна для приложений проверки правописания."
    },
    "53": {
        "question": "Что такое Smarty?",
        "answer": "Smarty - это шаблонизатор, написанный на PHP. Он облегчает создание шаблонов, которые включают переменные (например, {$переменная}) и логические и циклические операторы для обеспечения адаптивности внутри шаблонов."
    },
    "54": {
        "question": "Что такое Memcache?",
        "answer": "Memcache - это технология кэширования объектов в памяти, позволяющая веб-приложениям быстро получать к ним доступ. Она используется сайтами, такими как Digg, Facebook и NowPublic, и считается важным компонентом для масштабирования приложений LAMP (Linux, Apache, MySQL, PHP)."
    },
    "55": {
        "question": "Как выполнить скрипт PHP с помощью командной строки?",
        "answer": "Просто запустите программу PHP CLI (интерфейс командной строки) и укажите имя файла скрипта PHP в качестве аргумента командной строки, например, php myScript.php, предполагая, что php - это команда для вызова программы CLI.\n\nСледует помнить, что если наш скрипт PHP написан для интерфейса CGI веб-сервера, он может некорректно выполняться в среде командной строки."
    }
}